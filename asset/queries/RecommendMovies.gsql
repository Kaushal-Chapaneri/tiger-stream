CREATE QUERY RecommendMovies(
 vertex<person> p, int k1, int k2
) FOR GRAPH MyGraph {
 OrAccum @rated;
 SumAccum<double> @ratingByP;
 SumAccum<double> @lengthASqr, @lengthBSqr, @dotProductAB;
 SumAccum<double> @cosineSimilarity;
 AvgAccum @recommendScore;

 PSet = { p };
	
 PRatedMovies =
    SELECT m
    FROM PSet -(rate:r)-> movie:m
    ACCUM m.@rated = true, m.@ratingByP = r.rating;

 PeopleRatedSameMovies =
    SELECT tgt
    FROM PRatedMovies:m -(reverse_rate:r)-> person:tgt
    WHERE tgt != p
    ACCUM tgt.@lengthASqr += m.@ratingByP * m.@ratingByP,
          tgt.@lengthBSqr += r.rating * r.rating,
          tgt.@dotProductAB += m.@ratingByP * r.rating
    POST-ACCUM
          tgt.@cosineSimilarity =
            tgt.@dotProductAB / (sqrt(tgt.@lengthASqr) * sqrt(tgt.@lengthBSqr))
    ORDER BY tgt.@cosineSimilarity DESC
    LIMIT k1;

  RecommendedMovies =
    SELECT m
    FROM PeopleRatedSameMovies -(rate:r)-> movie:m
    WHERE m.@rated == false
    ACCUM m.@recommendScore += r.rating
    ORDER BY m.@recommendScore DESC
    LIMIT k2;

  PRINT RecommendedMovies;
}